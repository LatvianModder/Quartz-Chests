buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = project.mod_version
group = project.mod_package
archivesBaseName = project.mod_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	mappings channel: 'snapshot', version: project.mapping_version
	// accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.console.level', 'debug'

			if (project.hasProperty('mc_dev_uuid')) args '--uuid', project.mc_dev_uuid
			if (project.hasProperty('mc_dev_username')) args '--username', project.mc_dev_username
			if (project.hasProperty('mc_dev_width')) args '--width', project.mc_dev_width
			if (project.hasProperty('mc_dev_height')) args '--height', project.mc_dev_height

			mods {
				quartzchests {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.console.level', 'debug'

			mods {
				quartzchests {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.console.level', 'debug'

			args '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/')

			mods {
				quartzchests {
					source sourceSets.main
				}
			}
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${forge_version}"
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
	type 'jar'
	builtBy 'reobfJar'
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact reobfArtifact
		}
	}
	repositories {
		maven {
			url "file:///${project.projectDir}/mcmodsrepo"
		}
	}
}